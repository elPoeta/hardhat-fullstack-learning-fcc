{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x10c32415497815701b579195294a0f725c5674585c172d3e1f1b9eebb91271be",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1071770",
    "logsBloom": "0x
    "blockHash": "0x710058414f3f7e01b0978b2918884ec8dd31e79a7043a6c986780513993e5f21",
    "transactionHash": "0x10c32415497815701b579195294a0f725c5674585c172d3e1f1b9eebb91271be",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1071770",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "cb1ccb2ec30ba6c884a4e9cffea2a511",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    address private immutable i_owner;\\n    uint256 private constant MINIMUM_USD = 50 * 10**18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address priceFeed) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n    }\\n\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        // mappings can't be in memory!\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        //payable(msg.sender).transfer(address(this).balance);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getAddressToAmountFunded(address fundingAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\\n// Explainer from: https://solidity-by-example.org/fallback/\\n// Ether is sent to contract\\n//      is msg.data empty?\\n//          /   \\\\\\n//         yes  no\\n//         /     \\\\\\n//    receive()?  fallback()\\n//     /   \\\\\\n//   yes   no\\n//  /        \\\\\\n//receive()  fallback()\\n\",\"keccak256\":\"0x18415115320a9cfd0dd86c9bd250d2b027e659ef24057c46dfb6857a95ae4386\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // we could maket this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x03e129d4222335292e18f92d58fb44f8744b30949937e29e85982379a3b4f2a4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200138b3803806200138b833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c611205620001866000396000818161028a015281816104cc01528181610656015261084c01526112056000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e8578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610b10565b610199565b6040516100b49190610b56565b60405180910390f35b3480156100c957600080fd5b506100d26101e1565b6040516100df9190610b56565b60405180910390f35b6100f0610288565b005b3480156100fe57600080fd5b506101076104c8565b6040516101149190610b80565b60405180910390f35b34801561012957600080fd5b506101326104f0565b60405161013f9190610bfa565b60405180910390f35b61015061051a565b005b61015a610654565b005b34801561016857600080fd5b50610183600480360381019061017e9190610c41565b6108e2565b6040516101909190610b80565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561024b57600080fd5b505afa15801561025f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102839190610c83565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461030d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103b85760006001828154811061033357610332610cb0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103b090610d0e565b915050610310565b50600067ffffffffffffffff8111156103d4576103d3610d57565b5b6040519080825280602002602001820160405280156104025781602001602082028036833780820191505090505b5060019080519060200190610418929190610a06565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161043f90610db7565b60006040518083038185875af1925050503d806000811461047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b606091505b50509050806104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bc90610e29565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610559600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461092a90919063ffffffff16565b101561059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059190610e95565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105e89190610eb5565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106d9576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561075d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610713575b5050505050905060005b81518110156107e757600082828151811061078557610784610cb0565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107df90610d0e565b915050610767565b50600067ffffffffffffffff81111561080357610802610d57565b5b6040519080825280602002602001820160405280156108315781602001602082028036833780820191505090505b5060019080519060200190610847929190610a06565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161088e90610db7565b60006040518083038185875af1925050503d80600081146108cb576040519150601f19603f3d011682016040523d82523d6000602084013e6108d0565b606091505b50509050806108de57600080fd5b5050565b6000600182815481106108f8576108f7610cb0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061093683610966565b90506000670de0b6b3a7640000858361094f9190610f0b565b6109599190610f94565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109af57600080fd5b505afa1580156109c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e7919061103d565b5050509150506402540be400816109fe91906110b8565b915050919050565b828054828255906000526020600020908101928215610a7f579160200282015b82811115610a7e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a26565b5b509050610a8c9190610a90565b5090565b5b80821115610aa9576000816000905550600101610a91565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610add82610ab2565b9050919050565b610aed81610ad2565b8114610af857600080fd5b50565b600081359050610b0a81610ae4565b92915050565b600060208284031215610b2657610b25610aad565b5b6000610b3484828501610afb565b91505092915050565b6000819050919050565b610b5081610b3d565b82525050565b6000602082019050610b6b6000830184610b47565b92915050565b610b7a81610ad2565b82525050565b6000602082019050610b956000830184610b71565b92915050565b6000819050919050565b6000610bc0610bbb610bb684610ab2565b610b9b565b610ab2565b9050919050565b6000610bd282610ba5565b9050919050565b6000610be482610bc7565b9050919050565b610bf481610bd9565b82525050565b6000602082019050610c0f6000830184610beb565b92915050565b610c1e81610b3d565b8114610c2957600080fd5b50565b600081359050610c3b81610c15565b92915050565b600060208284031215610c5757610c56610aad565b5b6000610c6584828501610c2c565b91505092915050565b600081519050610c7d81610c15565b92915050565b600060208284031215610c9957610c98610aad565b5b6000610ca784828501610c6e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d1982610b3d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d4c57610d4b610cdf565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610da1600083610d86565b9150610dac82610d91565b600082019050919050565b6000610dc282610d94565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e13600b83610dcc565b9150610e1e82610ddd565b602082019050919050565b60006020820190508181036000830152610e4281610e06565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610e7f601b83610dcc565b9150610e8a82610e49565b602082019050919050565b60006020820190508181036000830152610eae81610e72565b9050919050565b6000610ec082610b3d565b9150610ecb83610b3d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f0057610eff610cdf565b5b828201905092915050565b6000610f1682610b3d565b9150610f2183610b3d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f5a57610f59610cdf565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f9f82610b3d565b9150610faa83610b3d565b925082610fba57610fb9610f65565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fe481610fc5565b8114610fef57600080fd5b50565b60008151905061100181610fdb565b92915050565b6000819050919050565b61101a81611007565b811461102557600080fd5b50565b60008151905061103781611011565b92915050565b600080600080600060a0868803121561105957611058610aad565b5b600061106788828901610ff2565b955050602061107888828901611028565b945050604061108988828901610c6e565b935050606061109a88828901610c6e565b92505060806110ab88828901610ff2565b9150509295509295909350565b60006110c382611007565b91506110ce83611007565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561110d5761110c610cdf565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561114a57611149610cdf565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561118757611186610cdf565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111c4576111c3610cdf565b5b82820290509291505056fea264697066735822122024c62a9b77f89109dc39f7ac48f29241240660ddfb363e98f130dfe9b7b3c01d64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e8578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610b10565b610199565b6040516100b49190610b56565b60405180910390f35b3480156100c957600080fd5b506100d26101e1565b6040516100df9190610b56565b60405180910390f35b6100f0610288565b005b3480156100fe57600080fd5b506101076104c8565b6040516101149190610b80565b60405180910390f35b34801561012957600080fd5b506101326104f0565b60405161013f9190610bfa565b60405180910390f35b61015061051a565b005b61015a610654565b005b34801561016857600080fd5b50610183600480360381019061017e9190610c41565b6108e2565b6040516101909190610b80565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561024b57600080fd5b505afa15801561025f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102839190610c83565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461030d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103b85760006001828154811061033357610332610cb0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103b090610d0e565b915050610310565b50600067ffffffffffffffff8111156103d4576103d3610d57565b5b6040519080825280602002602001820160405280156104025781602001602082028036833780820191505090505b5060019080519060200190610418929190610a06565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161043f90610db7565b60006040518083038185875af1925050503d806000811461047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b606091505b50509050806104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bc90610e29565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610559600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461092a90919063ffffffff16565b101561059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059190610e95565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105e89190610eb5565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106d9576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561075d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610713575b5050505050905060005b81518110156107e757600082828151811061078557610784610cb0565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107df90610d0e565b915050610767565b50600067ffffffffffffffff81111561080357610802610d57565b5b6040519080825280602002602001820160405280156108315781602001602082028036833780820191505090505b5060019080519060200190610847929190610a06565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161088e90610db7565b60006040518083038185875af1925050503d80600081146108cb576040519150601f19603f3d011682016040523d82523d6000602084013e6108d0565b606091505b50509050806108de57600080fd5b5050565b6000600182815481106108f8576108f7610cb0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061093683610966565b90506000670de0b6b3a7640000858361094f9190610f0b565b6109599190610f94565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109af57600080fd5b505afa1580156109c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e7919061103d565b5050509150506402540be400816109fe91906110b8565b915050919050565b828054828255906000526020600020908101928215610a7f579160200282015b82811115610a7e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a26565b5b509050610a8c9190610a90565b5090565b5b80821115610aa9576000816000905550600101610a91565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610add82610ab2565b9050919050565b610aed81610ad2565b8114610af857600080fd5b50565b600081359050610b0a81610ae4565b92915050565b600060208284031215610b2657610b25610aad565b5b6000610b3484828501610afb565b91505092915050565b6000819050919050565b610b5081610b3d565b82525050565b6000602082019050610b6b6000830184610b47565b92915050565b610b7a81610ad2565b82525050565b6000602082019050610b956000830184610b71565b92915050565b6000819050919050565b6000610bc0610bbb610bb684610ab2565b610b9b565b610ab2565b9050919050565b6000610bd282610ba5565b9050919050565b6000610be482610bc7565b9050919050565b610bf481610bd9565b82525050565b6000602082019050610c0f6000830184610beb565b92915050565b610c1e81610b3d565b8114610c2957600080fd5b50565b600081359050610c3b81610c15565b92915050565b600060208284031215610c5757610c56610aad565b5b6000610c6584828501610c2c565b91505092915050565b600081519050610c7d81610c15565b92915050565b600060208284031215610c9957610c98610aad565b5b6000610ca784828501610c6e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d1982610b3d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d4c57610d4b610cdf565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610da1600083610d86565b9150610dac82610d91565b600082019050919050565b6000610dc282610d94565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e13600b83610dcc565b9150610e1e82610ddd565b602082019050919050565b60006020820190508181036000830152610e4281610e06565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610e7f601b83610dcc565b9150610e8a82610e49565b602082019050919050565b60006020820190508181036000830152610eae81610e72565b9050919050565b6000610ec082610b3d565b9150610ecb83610b3d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f0057610eff610cdf565b5b828201905092915050565b6000610f1682610b3d565b9150610f2183610b3d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f5a57610f59610cdf565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f9f82610b3d565b9150610faa83610b3d565b925082610fba57610fb9610f65565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fe481610fc5565b8114610fef57600080fd5b50565b60008151905061100181610fdb565b92915050565b6000819050919050565b61101a81611007565b811461102557600080fd5b50565b60008151905061103781611011565b92915050565b600080600080600060a0868803121561105957611058610aad565b5b600061106788828901610ff2565b955050602061107888828901611028565b945050604061108988828901610c6e565b935050606061109a88828901610c6e565b92505060806110ab88828901610ff2565b9150509295509295909350565b60006110c382611007565b91506110ce83611007565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561110d5761110c610cdf565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561114a57611149610cdf565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561118757611186610cdf565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111c4576111c3610cdf565b5b82820290509291505056fea264697066735822122024c62a9b77f89109dc39f7ac48f29241240660ddfb363e98f130dfe9b7b3c01d64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}